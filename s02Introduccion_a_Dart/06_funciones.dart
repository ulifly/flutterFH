void main(){

  print( saludarATodos() );
  print(saludo());
  print(sumarDosNumeros(10, 20));
  print(sumarDosNumeros2(7, 6));
  print(saludarPersona(nombre: 'Ulifly'));
  print(saludarPersona(mensaje: 'Bonjour', nombre: 'Zoquete üòÇ'));
}



String saludarATodos(){
  return "Bonjour pedazo de zoquetes üòú";
}

//tambi√©n podemos hacer una funci√≥n lambda

String saludo()=> "Hola simplemente";


int sumarDosNumeros( int a , int b) {  //podemos definir el tipo de datos que requieren los argumentos 
  return a + b;
}

//tarea convertir la funci√≥n sumarDosNumeros a funci√≥n flecha(lambda)

int sumarDosNumeros2(int a, int b) => a+b;

//podemos hacer opcional un argumento 

int sumarDosNumerosOpcional(int a, [int? b]) { //se pone entre corchetes para indicar que el valor es opcional y se pone el s√≠mbolo ? en el tipo para decirle a dart que es un entero opcional es decir que no reciba null
  b = b ?? 0; //la suma de a + b es potencialmente insegura podr√≠a no recibir un dato por lo cual sera null para eso hacemos una validaci√≥n preguntamos con ?? si se recibi√≥ un valor si no pasamos un par√°metro por defecto en este caso 0

  // b ??= 0    tambi√©n se puede validar de esta forma

  return a + b; 
}

/// tambi√©n podemos hacer la misma validaci√≥n opcional como sigue:

int sumarDosNumerosOpcional2( int a, [int b=0] ){
  return a+b;
}

/// de la forma que hemos estado recibiendo los par√°metros es de forma posicional, es decir el a es el primero por su posici√≥n y el b el segundo
/// podemos poner nombre a los parametros para decidir que se recibe

String saludarPersona({ required String? nombre, String? mensaje = 'hola' }){ //al envolver los par√°metros entre llaves los vuelve opcionales en este caso a mensaje le asignamos un valor por defecto si no se recibe ning√∫n par√°metro, 
                                                                      //tambi√©n con la palabra reservada required obligamos a pasar un par√°metro a la variable nombre
  return '$mensaje, $nombre';
}